---
title: "Non-linear relationships"
format: html
editor: source
---

The `01-plan/01-study-design/02-data-simulation.qmd` documents the original analysis plan. In addition, the `02-code/analysis-template.qmd` provides code for how we planned to analyse the data and test our hypotheses. More specifically, in these plans, we had assumed that, on a ln-scale, we could model the relationship between nitrogen ($N$) and total biomass ($B$). However, following data exploration `02-code/01-exploratory-data-analysis.qmd`, it was clear that even on a log-scale, the relationship was not adequately described by a linear model.

## Prepare environment

```{r}
# load the prep_env script
source(here::here("functions/prep_exp_env.R"))
```

## Testing for non-linearity

To show that the data for both experiment 1 and experiment 2 are better described by non-linear functions, we used cross-validation. Specifically, we fit basis-splines of increasing complexity for the log(N) variable and compared the results using leave-one-out cross-validation. When the fit was better for the non-linear models than for the linear model, we concluded that there was justification for using the non-linear models.

```{r}
# load the raw data
dat_raw <- readr::read_csv2(here::here("data-raw/all-raw-data-response-phase.csv"),
                            guess_max = 1000)
```

### Experiment 1

Set-up a vector of species names:

```{r}
# vector of species names
sp_names <- c("Erigeron_canadensis", "Phytolacca_americana", "Solidago_gigantea", "Sporobolus_indicus")
```

Loop over each of the four invasive species by first cleaning the data and then by running the model selection.

```{r}
# loop over each of the four species
cv_list_exp1 <- list()
for (i in seq_along(sp_names)) {
  
  # set the species
  i_species_sel <- sp_names[i]
  
  # exclude_high_N
  exclude_high_N <- FALSE
  
  # clean the data
  dat_ex1_mod <- 
    clean_exp1(data = dat_raw,
               i_species = i_species_sel,
               exclude_high_N = exclude_high_N) |>
    dplyr::mutate(log_B = log(B),
                  N = N - min(N),
                  P = factor(P),
                  M = factor(M))
  
  # run the cross-validation procedure
  x_mod <- compare_models_loocv(data = dat_ex1_mod, formulas = model_list_exp1) 

  # extract the table
  x_mod <- x_mod$LOO_est

  # check the model
  x_mod$species <- i_species_sel

  # reorder the variables
  x_mod <- dplyr::select(x_mod, species, model:AIC)
  
  # add to the list
  cv_list_exp1[[i]] <- x_mod
  
}
```

Bind the model-selection tables and arrange by species and root mean squared error.

```{r}
# bind the different tables together
cv_table_exp1 <- dplyr::bind_rows(cv_list_exp1)

# arrange by species and then fit
cv_table_exp1 <- dplyr::arrange(cv_table_exp1, species, RMSE)
```

Export the table to a .rds file.

```{r}
# save the data
saveRDS(object = cv_table_exp1,
        file.path(figure_table_path, 
                  paste0("cv-tbl-exp1", figure_suff("", exclude_high_N), ".rds")))
```

From this analysis, it is clear that the linear model is the worst fit to the data and substantially worse than the other models for all four species.

#### Revised plan

As is clear from this analysis of the model fit that the linear model (**m1**) is a consistently worse fit to the data than the models that incorporate basis splines for the relationship between nitrogen (N) and biomass (B). This is true for a range of metrics calculated via leave-one-out cross validation.

Originally, we aimed to test whether there was a difference in how natives and invasives respond to nitrogen and microbes. We set-up the model in such a way that the $beta_7$ coefficient provided the critical test of this hypothesis. Specifically:

+ If $\beta_7 > 0$, the plant-soil feedback becomes more positive (or less negative) with increasing N in invasives compared to natives.  
+ If $\beta_7 < 0$, the plant-soil feedback becomes more negative with increasing N in invasives compared to natives.

However, given that the relationship between N and B is non-linear, we have revised this hypothesis. Specifically, rather than trying to test whether the plant-soil feedback becomes more positive (i.e. less negative) or more negative (i.e. less positive), we test whether there is a difference in how natives and invasives respond to nitrogen in the presence and absence of microbes.

To do this, we compare two models using a likelihood ratio test (LRT) based on the chi-squared distribution:

+ **(1)** The full model with main effects of N, M and P (i.e. native versus invasive), all pairwise interactions and the three-way interaction and where N is modeled using basis-splines (specific splines chosen based on model fit)

+ **(2)** A reduced model with main effects of N, M and P (i.e. native versus invasive), all pairwise interactions but without the three-way interaction and where N is modeled using basis-splines (specific splines chosen based on model fit)

If the full model has a significantly higher log-likelihood, we conclude that there is a difference in how natives and invasives respond to nitrogen in the presence and absence of microbes.


### Experiment 2

Loop over each of the four invasive species by first cleaning the data and then by running the model selection.

```{r}
# loop over each of the four species
cv_list_exp2 <- list()
for (i in seq_along(sp_names)) {
  
  # set the species
  i_species_sel <- sp_names[i]
  
  # exclude_high_N
  exclude_high_N <- FALSE
  
  # clean the data
  dat_ex2_mod <- 
    clean_exp2(data = dat_raw,
               i_species = i_species_sel,
               exclude_high_N = exclude_high_N) |>
    dplyr::mutate(log_B = log(B),
                  N = N - min(N),
                  I = factor(I),
                  M = factor(M))
  
  # run the cross-validation procedure
  x_mod <- compare_models_loocv(data = dat_ex2_mod, formulas = model_list_exp2) 

  # extract the table
  x_mod <- x_mod$LOO_est

  # check the model
  x_mod$species <- i_species_sel

  # reorder the variables
  x_mod <- dplyr::select(x_mod, species, model:AIC)
  
  # add to the list
  cv_list_exp2[[i]] <- x_mod
  
}
```

```{r}
# bind the different tables together
cv_table_exp2 <- dplyr::bind_rows(cv_list_exp2)

# arrange by species and then fit
cv_table_exp2 <- dplyr::arrange(cv_table_exp2, species, RMSE)
```

Export the table to a .rds file.

```{r}
# save the data
saveRDS(object = cv_table_exp2,
        file.path(figure_table_path, 
                  paste0("cv-tbl-exp2", figure_suff("", exclude_high_N), ".rds")))
```

#### Revised plan










