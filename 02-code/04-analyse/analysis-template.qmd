---
title: "Analysis template"
format: html
editor: source
---

This notebook is the analysis template for analysing the data for the different invasive species studied. It follows the analysis plan laid out in the data simulation in this repository (`01-plan/01-study-design/02-data-simulation.qmd`).

```{r}
# load the relevant libraries
library(dplyr)
library(ggplot2)
```

```{r}
# load the relevant help functions
```

## Experiment 1 {#sec-experiment-1}

```{r}
# specify the data-file name
dat_name <- "ex1-test-data.rds"
```

```{r}
# load the data
dat_ex1 <- readRDS(here::here(file.path("data", dat_name)))

# check the first few rows
head(dat_ex1)
```

### Data preparation

We prepare the data for the model fitting by log-transforming the biomass variable ($B$) and subtracting minimum N-level from the N variable ($N$) so that the intercept corresponds to the lowest nitrogen level (log(4 mg N)). We also convert the microbe ($M$) and native/invasive ($P$) variable to factors for model-fitting.

```{r}
# prepare the data for model fitting
dat_ex1_mod <-
  dat_ex1 |>
  dplyr::mutate(log_B = log(B),
                N = N - min(N),
                P = factor(P),
                M = factor(M))
```

### Model fitting

As detailed in the analysis plan, we the following linear model to the log-transformed native biomass values:

$$
log(B_{i}) = \alpha + \beta_1\text{N}_{i} + \beta_2\text{M}_{i} + \beta_3\text{P}_{i} + \beta_4\text{N}_{i}\text{M}_{i} + \beta_5\text{N}_{i}\text{P}_{i} + \beta_6\text{M}_{i}\text{P}_{i} + \beta_7\text{N}_{i}\text{M}_{i}\text{P}_{i} + \epsilon_{i}
$$ {#eq-exp1-lm}

$$
\epsilon_{i} \sim Normal(0, \sigma_{residual})
$$ {#eq-exp1-lm-error}

To do this, we use the `lm()` function from the `stats` package:

```{r}
# fit the model to the experiment 1 data
lm_ex1 <- lm(log_B ~ N + M + P + N:M + N:P + M:P + N:M:P,
             data = dat_ex1_mod)

# extract the summary
lm_ex1_sum <- summary(lm_ex1)
```

#### Checking model fit

We examine the model fit by plotting the observed versus predicted values and sampling from the model to determine how well it can reproduce the observed data.

```{r}
# plot the observed versus predicted values
plot(dat_ex1_mod$log_B, predict(lm_ex1))
abline(0, 1)
```

```{r}
# check the r-squared value
lm_ex1_sum$r.squared
```

We also test whether the fitted model can produce reasonable estimates of the mean and the variance of log-biomass based on simulating from the model:

```{r}
# simulate the expected value of log B
log_B_sim <- predict(lm_ex1)

# add the stochasticity from the model
log_B_sim <- log_B_sim + rnorm(n = length(log_B_sim), mean = 0, lm_ex1_sum$sigma)

# create a table comparing the observed to the simulated mean and variance
dplyr::tibble(sim_obs = c("Observed", "Simulated"),
              mean_log_B = c(mean(dat_ex1_mod$log_B), mean(log_B_sim)),
              var_log_B = c(var(dat_ex1_mod$log_B), var(log_B_sim)))
```

#### Testing model assumptions

We use a graphical analysis of the residuals to examine the model assumptions.

```{r}
# plot 1
plot(lm_ex1, 1)
```

```{r}
# plot 2
plot(lm_ex1, 2)
```

```{r}
# plot 3
plot(lm_ex1, 3)
```

```{r}
# plot 4
plot(lm_ex1, 4)
```

#### Hypothesis testing

Given that the model fit looks good and the assumptions are met, we proceed with the hypothesis test on the $beta_7$ coefficient which measures the difference in how natives and invasives respond to nitrogen and microbes.

$$
H_0: \beta_7 = 0
$$

$$
H_A:  \beta_7 \neq 0
$$

```{r}
# test with a likelihood ratio test
drop1(lm_ex1, test = "Chisq")
```

```{r}
# test using a standard coefficient test
lm_ex1_sum
```

From this, we would reject the null hypothesis ($H_0: \beta_7 = 0$) and accept the alternative $H_A:  \beta_7 \neq 0$ where, specifically, $\beta_7$ is greater than 0. This would indicate that the effect of microbes become more positive (or less negative) with nitrogen for invasive species but not for native species.

## Simulation experiment {sec-simulation-experiment}

We now use the model that was fitted to @sec-experiment-1 to simulate competition between natives and invasives based on how they respond to nitrogen and microbes (`01-plan/01-study-design/02-data-simulation.qmd`).

```{r}
# load function for simulating competition
source(here::here("functions/simulate_competition.R"))
```

We simulate competition for a range of per capita competition coefficients between 0.1 and 0.75 (i.e. steps of 0.05). Moreover, given that we want to sample extensively from the fitted model, each unique treatment conditions (i.e. nitrogen value, presence/absence of microbes and presence/absence of a simulated invasive) is replicated 100 times and each this is repeated 10 separate times (i.e. 10 simulations for each per capita competition coefficient value):

```{r}
# set-up a vector of competition values
alpha_vals <- seq(0.1, 0.75, 0.05)

# replicates per alpha value
alpha_vals <- rep(alpha_vals, each = 10)

# loop the simulation over these alpha_vals
sim_out <- vector("list", length = length(alpha_vals))
for (i in seq_along(sim_out)) {
  # run the simulation
  x <- 
    simulate_competition(N_vals = log(c(4, 8, 16, 32, 64)), 
                         M_vals = c(0, 1),
                         n_rep = 100,
                         fitted_model = lm_ex1,
                         alpha_IN = alpha_vals[i],
                         alpha_NI = alpha_vals[i])
  
  # add a competition coefficient value
  sim_out[[i]] <- 
    dplyr::bind_cols(dplyr::tibble(alpha_sim_rep = i,
                                   alpha_sim = alpha_vals[i]),
                     x)
}
```

```{r}
# fit the relevant linear model to each simulated dataset and extract beta7 parameter
pred_coef <- 
  lapply(sim_out, function(x) {
  # fit the linear model
  lm_x <- lm(log(B) ~ N + M + I + N:M + I:M + I:N + N:M:I, 
           data = x |> dplyr::mutate(N = N, M = factor(M), I = factor(I)))
  # extract the coefficients
  coef_x <- coef(lm_x)[8]
  # remove the names
  names(coef_x) <- NULL
  # return the coefficient
  coef_x
})
```

We then make the following **decision rule** about the hypothesis for **experiment 2**. If the range of predicted coefficient values is below zero, we hypothesise that the $\gamma_7$ coefficient will be less than zero in **experiment 2** (see @sec-prediction-1). If the range is greater than zero, we hypothesise that the $\gamma_7$ will be greater than zero in **experiment 2** (see @sec-prediction-2). Finally, if the range overlaps with zero, then we hypothesise that $\gamma_7$ will not be different from zero (see @sec-prediction-3).

In this case, the simulation indicates that, based on the performance of natives and invasives in the absence of competition that the $\gamma_7$ coefficient should be less than zero (i.e. the full range of $\gamma_7$ estimates from simulated runs of @sec-experiment-2 is less than zero):

```{r}
# check the range
range(unlist(pred_coef))
```




